---
# Install Kubernetes binaries and containerd in an air-gapped environment
- name: Ensure temporary directory for deb packages exists
  file:
    path: /tmp/k8s_debs
    state: directory
    mode: '0755'
  become: yes

# Download required Kubernetes .deb packages from the master HTTP service
- name: Download Kubernetes packages from asset server
  get_url:
    url: "http://{{ asset_server_host }}:{{ asset_server_port }}/pkgs/{{ item }}"
    dest: "/tmp/k8s_debs/{{ item }}"
    mode: '0644'
    timeout: 30
  loop: "{{ kubernetes_packages }}"
  become: yes

# Determine containerd package filename
- name: Set containerd package file name
  set_fact:
    containerd_pkg_file: "containerd.io_{{ containerd_version }}-1_amd64.deb"
  become: yes

- name: Download containerd package from asset server
  get_url:
    url: "http://{{ asset_server_host }}:{{ asset_server_port }}/pkgs/{{ containerd_pkg_file }}"
    dest: "/tmp/k8s_debs/{{ containerd_pkg_file }}"
    mode: '0644'
    timeout: 30
  when: containerd_pkg_file is defined
  become: yes

# Install OS utility packages first
- name: Install OS utility packages
  apt:
    deb: "/tmp/k8s_debs/{{ item }}"
    state: present
  loop:
    - "conntrack_1.4.7-1_amd64.deb"
    - "socat_1.7.4.4-2_amd64.deb"
    - "ebtables_2.0.11-4_amd64.deb"
  become: yes

# Install Kubernetes support binaries
- name: Install Kubernetes support binaries
  apt:
    deb: "/tmp/k8s_debs/{{ item }}"
    state: present
  loop:
    - "cri-tools_1.28.0-1_amd64.deb"
    - "kubernetes-cni_1.3.0-1_amd64.deb"
  become: yes

# Install main Kubernetes binaries
- name: Install Kubernetes binaries
  apt:
    deb: "/tmp/k8s_debs/{{ item }}"
    state: present
  loop:
    - "kubelet_{{ kube_version_pkgs }}_amd64.deb"
    - "kubectl_{{ kube_version_pkgs }}_amd64.deb"
    - "kubeadm_{{ kube_version_pkgs }}_amd64.deb"
  become: yes

# Install containerd runtime
- name: Install containerd
  apt:
    deb: "/tmp/k8s_debs/{{ containerd_pkg_file }}"
    state: present
  become: yes

# Generate a default containerd configuration
- name: Generate default containerd config
  shell: containerd config default > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml
  become: yes

# Deploy the custom containerd configuration
- name: Deploy containerd configuration
  template:
    src: containerd_config.toml.j2
    dest: /etc/containerd/config.toml
    mode: '0644'
  become: yes
  notify: Restart containerd

- name: Enable and start containerd
  systemd:
    name: containerd
    enabled: yes
    state: started
  become: yes

- name: Enable kubelet service
  systemd:
    name: kubelet
    enabled: yes
    state: stopped
  become: yes
