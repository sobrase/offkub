---
# Deploy Traefik Gateway controller using helm-templated manifest
- name: Set kubectl environment
  set_fact:
    kubectl_env:
      KUBECONFIG: /etc/kubernetes/admin.conf
  become: true

- name: Copy Gateway API CRDs
  copy:
    src: standard-install.yaml
    dest: /tmp/standard-install.yaml
    mode: '0644'
  become: true

- name: Apply Gateway API CRDs
  shell: kubectl apply -f /tmp/standard-install.yaml
  environment: "{{ kubectl_env }}"
  become: true

- name: Copy Traefik CRDs
  copy:
    src: traefik-crds.yaml
    dest: /tmp/traefik-crds.yaml
    mode: '0644'
  become: true

- name: Apply Traefik CRDs
  shell: kubectl apply -f /tmp/traefik-crds.yaml
  environment: "{{ kubectl_env }}"
  become: true

- name: Ensure traefik namespace exists
  shell: |
    cat <<EOF2 | kubectl apply -f -
    apiVersion: v1
    kind: Namespace
    metadata:
      name: traefik
    EOF2
  environment: "{{ kubectl_env }}"
  become: true

- name: Create self-signed certificate for Traefik
  shell: |
    if ! kubectl get secret traefik-cert -n traefik >/dev/null 2>&1; then
      openssl req -x509 -nodes -newkey rsa:2048 -days 365 \
        -keyout /tmp/traefik.key -out /tmp/traefik.crt \
        -subj "/CN=traefik.local"
      kubectl create secret tls traefik-cert \
        --cert=/tmp/traefik.crt --key=/tmp/traefik.key -n traefik
    fi
  environment: "{{ kubectl_env }}"
  become: true


- name: Copy rendered Traefik manifest
  copy:
    src: traefik.yaml
    dest: /tmp/traefik.yaml
    mode: '0644'
  become: true

- name: Deploy Traefik manifest
  shell: kubectl apply -f /tmp/traefik.yaml
  environment: "{{ kubectl_env }}"
  become: true

- name: Wait for Traefik daemonset rollout
  shell: kubectl rollout status daemonset/traefik -n traefik --timeout=120s
  register: traefik_rollout
  retries: 5
  delay: 30
  until: traefik_rollout.rc == 0
  environment: "{{ kubectl_env }}"
  changed_when: false
  become: true

- name: Copy test service manifest
  copy:
    src: whoami.yaml
    dest: /tmp/whoami.yaml
    mode: '0644'
  when: deploy_test_route
  become: true

- name: Apply test service manifest
  shell: kubectl apply -f /tmp/whoami.yaml
  environment: "{{ kubectl_env }}"
  when: deploy_test_route
  become: true

- name: Copy test HTTPRoute manifest
  copy:
    src: test-route.yaml
    dest: /tmp/test-route.yaml
    mode: '0644'
  when: deploy_test_route
  become: true

- name: Apply test HTTPRoute manifest
  shell: kubectl apply -f /tmp/test-route.yaml
  environment: "{{ kubectl_env }}"
  when: deploy_test_route
  become: true
