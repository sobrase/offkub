---
# Deploy Traefik Gateway controller using offline manifests
- name: Set kubectl environment
  set_fact:
    kubectl_env:
      KUBECONFIG: /etc/kubernetes/admin.conf
  become: true

- name: Copy Gateway API CRDs
  copy:
    src: standard-install.yaml
    dest: /tmp/standard-install.yaml
    mode: '0644'
  become: true

- name: Apply Gateway API CRDs
  shell: kubectl apply -f /tmp/standard-install.yaml
  environment: "{{ kubectl_env }}"
  become: true

- name: Ensure traefik-system namespace exists
  shell: |
    cat <<EOF2 | kubectl apply -f -
    apiVersion: v1
    kind: Namespace
    metadata:
      name: traefik-system
    EOF2
  environment: "{{ kubectl_env }}"
  become: true

- name: Copy Traefik RBAC manifest
  copy:
    src: rbac.yaml
    dest: /tmp/traefik-rbac.yaml
    mode: '0644'
  become: true

- name: Apply Traefik RBAC manifest
  shell: kubectl apply -f /tmp/traefik-rbac.yaml
  environment: "{{ kubectl_env }}"
  become: true

- name: Copy Traefik controller deployment
  copy:
    src: traefik-controller.yaml
    dest: /tmp/traefik-controller.yaml
    mode: '0644'
  become: true

- name: Deploy Traefik controller
  shell: kubectl apply -f /tmp/traefik-controller.yaml
  environment: "{{ kubectl_env }}"
  become: true

- name: Copy GatewayClass manifest
  copy:
    src: gatewayclass.yaml
    dest: /tmp/gatewayclass.yaml
    mode: '0644'
  become: true

- name: Apply GatewayClass manifest
  shell: kubectl apply -f /tmp/gatewayclass.yaml
  environment: "{{ kubectl_env }}"
  become: true

- name: Copy Gateway manifest
  copy:
    src: gateway.yaml
    dest: /tmp/gateway.yaml
    mode: '0644'
  become: true

- name: Apply Gateway manifest
  shell: kubectl apply -f /tmp/gateway.yaml
  environment: "{{ kubectl_env }}"
  become: true

- name: Wait for Traefik daemonset rollout
  shell: kubectl rollout status daemonset/traefik -n traefik-system --timeout=120s
  register: traefik_rollout
  retries: 5
  delay: 30
  until: traefik_rollout.rc == 0
  environment: "{{ kubectl_env }}"
  changed_when: false
  become: true

- name: Copy test service manifest
  copy:
    src: whoami.yaml
    dest: /tmp/whoami.yaml
    mode: '0644'
  when: deploy_test_route
  become: true

- name: Apply test service manifest
  shell: kubectl apply -f /tmp/whoami.yaml
  environment: "{{ kubectl_env }}"
  when: deploy_test_route
  become: true

- name: Copy test HTTPRoute manifest
  copy:
    src: test-route.yaml
    dest: /tmp/test-route.yaml
    mode: '0644'
  when: deploy_test_route
  become: true

- name: Apply test HTTPRoute manifest
  shell: kubectl apply -f /tmp/test-route.yaml
  environment: "{{ kubectl_env }}"
  when: deploy_test_route
  become: true
