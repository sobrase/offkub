---
# Deploy Traefik Ingress controller using offline manifests
- name: Set kubectl environment
  set_fact:
    kubectl_env:
      KUBECONFIG: /etc/kubernetes/admin.conf
  become: true

- name: Render Traefik manifest

- name: Copy Gateway API standard CRDs
  copy:
    src: standard-install.yaml
    dest: /tmp/standard-install.yaml
    mode: '0644'
  become: true

- name: Apply standard CRDs
  shell: kubectl apply -f /tmp/standard-install.yaml
  environment: "{{ kubectl_env }}"
  become: true

- name: Copy Gateway API experimental CRDs
  copy:
    src: experimental-install.yaml
    dest: /tmp/experimental-install.yaml
    mode: '0644'
  become: true

- name: Apply experimental CRDs
  shell: kubectl apply -f /tmp/experimental-install.yaml
  environment: "{{ kubectl_env }}"
  become: true

- name: Copy Traefik controller manifest
  copy:
    src: traefik-controller.yaml
    dest: /tmp/traefik-controller.yaml
    mode: '0644'
  become: true

- name: Apply Traefik controller
  shell: kubectl apply -f /tmp/traefik-controller.yaml
  environment: "{{ kubectl_env }}"
  become: true

- name: Copy GatewayClass manifest
  copy:
    src: gatewayclass.yaml
    dest: /tmp/gatewayclass.yaml
    mode: '0644'
  become: true

- name: Apply GatewayClass
  shell: kubectl apply -f /tmp/gatewayclass.yaml
  environment: "{{ kubectl_env }}"
  become: true

- name: Copy Gateway manifest
  copy:
    src: gateway.yaml
    dest: /tmp/gateway.yaml
    mode: '0644'
  become: true

- name: Apply Gateway
  shell: kubectl apply -f /tmp/gateway.yaml
  environment: "{{ kubectl_env }}"
  become: true

- name: Wait for Traefik deployment rollout
  shell: kubectl rollout status deployment/traefik -n traefik --timeout=120s
  register: traefik_rollout
  retries: 5
  delay: 30
  until: traefik_rollout.rc == 0
  environment: "{{ kubectl_env }}"
  changed_when: false
  become: true
