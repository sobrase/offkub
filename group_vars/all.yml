# Global variables for offline Kubernetes deployment

# Kubernetes versions
kube_version: "1.32.0"               # Upstream version
kube_version_pkgs: "1.32.0-1.1"      # Package release string

# Debian package files required for airâ€‘gapped installation
kubernetes_packages:
  - kubeadm_1.32.0-1.1_amd64.deb
  - kubelet_1.32.0-1.1_amd64.deb
  - kubectl_1.32.0-1.1_amd64.deb
  - kubernetes-cni_1.6.0-1.1_amd64.deb
  - cri-tools_1.32.0-1.1_amd64.deb
  - socat_1.7.4.4-2_amd64.deb
  - conntrack_1:1.4.7-1+b2_amd64.deb
  - ebtables_2.0.11-5_amd64.deb

# Container runtime
containerd_version: "1.7.27"

# Socket path for the container runtime used during kubeadm join
cri_socket: "/run/containerd/containerd.sock"

# Version of the registry image used for the local Docker registry
registry_version: "2.8.2"

# Docker packages for the local registry host
registry_docker_packages:
  - docker-ce_5:28.3.2-1~debian.12~bookworm_amd64.deb
  - docker-ce-cli_5:28.3.2-1~debian.12~bookworm_amd64.deb
  - containerd.io_1.7.27-1_amd64.deb

# Paths used across roles
offline_pkg_dir: "/opt/offline/pkgs"   # Location where .deb files are stored
offline_image_dir: "/opt/offline/images" # Location of saved container images

# Calico configuration
calico_version: "v3.27.2"           # Manifest version
calico_image_version: "v3.27.2"    # Container image tag
traefik_version: "3.4.1"          # Traefik image tag
whoami_version: "v1.10.1"          # traefik/whoami image tag used for tests
traefik_chart_version: "36.0.0"    # Helm chart version used for templating
traefik_crds_chart_version: "1.9.0" # traefik-crds chart version
helm_version: "v3.18.4"            # Helm CLI version used when fetching assets

# Private registry settings
registry_host: "registrii.local"
registry_port: 5000

# Simple HTTP server settings used to distribute offline assets
asset_server_port: 8081
asset_server_host: "{{ registry_host }}"

# NVIDIA GPU configuration
nvidia_driver_runfile: "NVIDIA-Linux-x86_64-535.129.03.run"
nvidia_toolkit_version: "1.15.0"        # Container toolkit package
device_plugin_version: "v0.15.0"        # NVIDIA device plugin image tag

# List of NVIDIA container toolkit package filenames served by the asset server
nvidia_packages:
  - "nvidia-container-toolkit_{{ nvidia_toolkit_version }}-1_amd64.deb"

# Hosts file configuration
add_registry_host_entry: true            # Whether to map registry_host in /etc/hosts
registry_master_ip: "10.0.1.103"                  # Override master IP for registry host if needed

# Stable endpoint used for joining additional control plane nodes. Defaults to
# the first master in the inventory followed by the Kubernetes API port.
control_plane_endpoint: "{{ registry_master_ip }}:6443"

# cunoFS license key
cunofs_license_key: "SmVhbiBEdWphcmRpbgpzMGJyYXNlQGdtYWlsLmNvbQpwZXJzb25hbAoxNzUzMTQyNDAwCjQwNzA5MDg4MDAKMWI2YTM5ZDctMTljYy00NGU0LWFkOTItZmNkODA4ZmZlNDlkCjAKakU4L0ZyS1Z4ZE00UkdDQWlQTUdwdG44M3JHd09jcnVmQmhOOXhLbXJxQSt4anZRYTFtUzcxWlVCK2MxSitlM2h4WEs0ajMwZjkrd1NUdTNJcFN1R2lYNFN5YjVHMUQvMllUeUJRdzk2L0pZcDc2ekZYS0pCbU43UlBuUzVoV2FBS0t4SEZwWktJZm1Lc2hWTytHdnNQOUNpWDdoUVg2dTBUMmtvRFdVam93aWRGeFJGbUl5VGp3d0l6eEluaThkN0hqQzlzeWJzQVhieU4xTXhRcC9Lc0ZXRzl5R2lhQmZFSGxISlNBcTdjTTM4NEgyOUVBZXBJRUFSSFRTSHFvVWRmaDdrRUc5dm8xUysxVWlmNUNsbVBsZEJWMDF4a0I0TG5DcktwcVJRbFU0Y3RKcHpqS3Rjc2k2eittMGk2WHgwYXRUWXIweC9mc0ExaTM5VldRTTV3PT0K"
cunofs_namespace: "cunofs-system"
cunofs_version: "1.0.4"
